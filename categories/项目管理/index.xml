<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>项目管理 on Korman的个人博客</title>
    <link>http://korman.github.io/categories/%E9%A1%B9%E7%9B%AE%E7%AE%A1%E7%90%86/</link>
    <description>Recent content in 项目管理 on Korman的个人博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Tue, 13 Oct 2020 11:30:56 +0800</lastBuildDate><atom:link href="http://korman.github.io/categories/%E9%A1%B9%E7%9B%AE%E7%AE%A1%E7%90%86/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>[转载]不是工程师也能懂的Scrum入门介绍</title>
      <link>http://korman.github.io/post/development/%E4%B8%8D%E6%98%AF%E5%B7%A5%E7%A8%8B%E5%B8%88%E4%B9%9F%E8%83%BD%E6%87%82%E7%9A%84scrum%E5%85%A5%E9%97%A8%E4%BB%8B%E7%BB%8D/</link>
      <pubDate>Tue, 13 Oct 2020 11:30:56 +0800</pubDate>
      
      <guid>http://korman.github.io/post/development/%E4%B8%8D%E6%98%AF%E5%B7%A5%E7%A8%8B%E5%B8%88%E4%B9%9F%E8%83%BD%E6%87%82%E7%9A%84scrum%E5%85%A5%E9%97%A8%E4%BB%8B%E7%BB%8D/</guid>
      <description>什麽是Scrum？要理解其实很简单 Scrum源于软体工程师的工作模式，如果你的团队已经知道目标大致为何、可能需要做的事之后，下一步应该会想「如何一起完成」，而Scrum基本上就在告诉你这件事。 许多老闆都「听说」它很好，但因为难以理解、不知道实际优点、运作方式，所以想要导入就变得很</description>
    </item>
    
    <item>
      <title>[转载]如何让团队开始使用敏捷开发</title>
      <link>http://korman.github.io/post/development/%E5%A6%82%E4%BD%95%E8%AE%A9%E5%9B%A2%E9%98%9F%E5%BC%80%E5%A7%8B%E4%BD%BF%E7%94%A8%E6%95%8F%E6%8D%B7%E5%BC%80%E5%8F%91/</link>
      <pubDate>Mon, 12 Oct 2020 16:41:06 +0800</pubDate>
      
      <guid>http://korman.github.io/post/development/%E5%A6%82%E4%BD%95%E8%AE%A9%E5%9B%A2%E9%98%9F%E5%BC%80%E5%A7%8B%E4%BD%BF%E7%94%A8%E6%95%8F%E6%8D%B7%E5%BC%80%E5%8F%91/</guid>
      <description>为什么要敏捷开发 “没有人喜欢敏捷，但我们不得不敏捷。就像没有人喜欢工作，但你必须工作。”这是我经常用来调侃敏捷的一句话。 试想一下，拿到一份完整详尽的需求文档，逐个功能Coding，测试部署上线。不需要再次确认需求，不会有人打断思路。没有需求更改，只要自己不犯错，不存在推倒重来这才</description>
    </item>
    
    <item>
      <title>[转载]什么是敏捷开发</title>
      <link>http://korman.github.io/post/development/%E4%BB%80%E4%B9%88%E6%98%AF%E6%95%8F%E6%8D%B7%E5%BC%80%E5%8F%91/</link>
      <pubDate>Mon, 12 Oct 2020 15:49:56 +0800</pubDate>
      
      <guid>http://korman.github.io/post/development/%E4%BB%80%E4%B9%88%E6%98%AF%E6%95%8F%E6%8D%B7%E5%BC%80%E5%8F%91/</guid>
      <description>一个有趣的例子： 如果去餐厅点餐，点了10个菜，经过一个多小时，服务员才一次性把做完的10个菜全部端上来，这就等同于传统的开发模式，而大部分的餐厅显然不会这样，更常见的是做完一道菜就先端上了一道菜（以顾客需求为核心），这就相当于敏捷开发。 传统开发： 瀑布式开发，严格分级，需求分析，设</description>
    </item>
    
  </channel>
</rss>
